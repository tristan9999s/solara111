"getgenv().Tapped = {\r\n    ['Whitelist'] = {\r\n        ['LuaKey'] = \"Place ur luarmor key here\",\r\n    },\r\n    ['Configuration'] = {\r\n        ['Checks'] = {\r\n            ['Auto Mute Boombox'] = true,\r\n            ['Auto Low GFX'] = false,\r\n            ['Esp Box'] = true,\r\n        },\r\n        ['Loader'] = {\r\n            ['Enabled'] = true,\r\n        }\r\n    },\r\n    ['Silent Aim'] = {\r\n        ['Enabled'] = true,\r\n        ['Targetting'] = {\r\n            ['Keybind Enabled'] = true,\r\n            ['Keybind'] = \"P\",\r\n        },\r\n        ['Checks'] = {\r\n            ['Wall'] = true,\r\n            ['KO'] = true,\r\n            ['Death'] = true,\r\n            ['Picked'] = true,\r\n        },\r\n        ['Config'] = {\r\n            ['Hit Chance'] = 100,\r\n            ['Points'] = {\r\n                ['Point'] = \"HumanoidRootPart\",\r\n                ['Point Offset'] = 0,\r\n                ['Nearest Part'] = true,\r\n                ['Nearest Point'] = true,\r\n            },\r\n            ['Velocity'] = {\r\n                ['Prediction'] = 0.132248,\r\n                ['Anti Ground Shots'] = true,\r\n            }\r\n        },\r\n    },\r\n    ['Cam Lock'] = {\r\n        ['Enabled'] = true,\r\n        ['Prediction'] = 0.11777,\r\n        ['Key'] = \"C\",\r\n        ['Notify'] = true,\r\n        ['Point'] = \"HumanoidRootPart\",\r\n        ['Point Offset'] = 0,\r\n        ['Nearest Part'] = false,\r\n        ['Nearest Point'] = false,\r\n        ['Dot'] = false,\r\n        ['Smoothness'] = {\r\n            ['Enabled'] = true,\r\n            ['Value'] = 0.1\r\n        },\r\n        ['Flags'] = {\r\n            ['Unlock On KO'] = true,\r\n            ['Unlock Outside FOV'] = false,\r\n            ['Unlock Behind Wall'] = false\r\n        },\r\n        ['Shake'] = {\r\n            ['Enabled'] = false,\r\n            ['X'] = 5,\r\n            ['Y'] = 5,\r\n            ['Z'] = 5\r\n        }\r\n    },\r\n    ['Weapon Modifications'] = { \r\n        ['Enabled'] = false,\r\n        ['Double Barrel'] = {\r\n            ['FOV'] = true, \r\n            ['Prediction'] = true, \r\n            ['Smoothness'] = true, \r\n            ['Hit Chance'] = true,\r\n                ['Close Detection'] = 16,    ['Close FOV'] = 12,    ['Close Prediction'] = 0.1343536753,    ['Close Smoothness'] = 1,    ['Close Hit Chance'] = 100,\r\n                ['Mid Detection'] = 42,      ['Mid FOV'] = 32,      ['Mid Prediction'] = 0.1296543456,      ['Mid Smoothness'] = 1,      ['Mid Hit Chance'] = 100,\r\n                ['Far Detection'] = 100,     ['Far FOV'] = 33,      ['Far Prediction'] = 0.12,              ['Far Smoothness'] = 1,      ['Far Hit Chance'] = 100,\r\n        },\r\n        ['Revolver'] = {\r\n            ['FOV'] = true, \r\n            ['Prediction'] = true, \r\n            ['Smoothness'] = true, \r\n            ['Hit Chance'] = true,\r\n                ['Close Detection'] = 45,    ['Close FOV'] = 42,    ['Close Prediction'] = 0.1343536753,    ['Close Smoothness'] = 1,    ['Close Hit Chance'] = 100,\r\n                ['Mid Detection'] = 64,      ['Mid FOV'] = 62,      ['Mid Prediction'] = 0.1296543456,      ['Mid Smoothness'] = 1,      ['Mid Hit Chance'] = 100,\r\n                ['Far Detection'] = 145,     ['Far FOV'] = 155,      ['Far Prediction'] = 0.12,              ['Far Smoothness'] = 1,      ['Far Hit Chance'] = 100,\r\n        },\r\n        ['Tactical Shotgun'] = {\r\n            ['FOV'] = true, \r\n            ['Prediction'] = true, \r\n            ['Smoothness'] = true, \r\n            ['Hit Chance'] = true,\r\n                ['Close Detection'] = 27,    ['Close FOV'] = 42,    ['Close Prediction'] = 0.1343536753,    ['Close Smoothness'] = 1,    ['Close Hit Chance'] = 100,\r\n                ['Mid Detection'] = 62,      ['Mid FOV'] = 62,      ['Mid Prediction'] = 0.1296543456,      ['Mid Smoothness'] = 1,      ['Mid Hit Chance'] = 100,\r\n                ['Far Detection'] = 165,     ['Far FOV'] = 155,      ['Far Prediction'] = 0.12,              ['Far Smoothness'] = 1,      ['Far Hit Chance'] = 100,\r\n        },\r\n        ['Shotgun'] = {\r\n            ['FOV'] = true, \r\n            ['Prediction'] = true, \r\n            ['Smoothness'] = true, \r\n            ['Hit Chance'] = true,\r\n                ['Close Detection'] = 16,    ['Close FOV'] = 12,    ['Close Prediction'] = 0.1343536753,    ['Close Smoothness'] = 1,    ['Close Hit Chance'] = 100,\r\n                ['Mid Detection'] = 42,      ['Mid FOV'] = 32,      ['Mid Prediction'] = 0.1296543456,      ['Mid Smoothness'] = 1,      ['Mid Hit Chance'] = 100,\r\n                ['Far Detection'] = 100,     ['Far FOV'] = 33,      ['Far Prediction'] = 0.12,              ['Far Smoothness'] = 1,      ['Far Hit Chance'] = 100,\r\n        },\r\n        ['Rifle'] = {\r\n            ['FOV'] = true, \r\n            ['Prediction'] = true, \r\n            ['Smoothness'] = true, \r\n            ['Hit Chance'] = true,\r\n                ['Close Detection'] = 16,    ['Close FOV'] = 12,    ['Close Prediction'] = 0.1343536753,    ['Close Smoothness'] = 1,    ['Close Hit Chance'] = 100,\r\n                ['Mid Detection'] = 42,      ['Mid FOV'] = 32,      ['Mid Prediction'] = 0.1296543456,      ['Mid Smoothness'] = 1,      ['Mid Hit Chance'] = 100,\r\n                ['Far Detection'] = 100,     ['Far FOV'] = 33,      ['Far Prediction'] = 0.12,              ['Far Smoothness'] = 1,      ['Far Hit Chance'] = 100,\r\n        }\r\n    },\r\n    ['Resolver'] = {\r\n        ['Enabled'] = false,\r\n        ['Method'] = \"Delta\",\r\n    },\r\n    ['Global'] = {\r\n        ['Auto Prediction'] = false,\r\n    },\r\n    ['Checks'] = {\r\n        ['Visible Check'] = true,\r\n        ['K.O Check'] = true,\r\n        ['Crew Check'] = false\r\n    },\r\n    ['Drawings Thug'] = {\r\n        ['Dot'] = {\r\n            ['Visible'] = false,\r\n            ['Filled'] = false,\r\n            ['Size'] = 5,\r\n            ['Thickness'] = 1,\r\n            ['Transparency'] = 1,\r\n            ['Color'] = Color3.fromRGB(112, 2, 2)\r\n        },\r\n        ['Circle'] = {\r\n            ['Silent'] = {\r\n                ['Visible'] = true,\r\n                ['Stick'] = false,\r\n                ['Filled'] = false,\r\n                ['Size'] = 120,\r\n                ['Thickness'] = 1,\r\n                ['Transparency'] = 1,\r\n                ['Color'] = Color3.fromRGB(1, 1, 1)\r\n            },\r\n            ['Aimbot'] = {\r\n                ['Visible'] = false,\r\n                ['Filled'] = false,\r\n                ['Size'] = 102,\r\n                ['Thickness'] = 1,\r\n                ['Transparency'] = 1,\r\n                ['Color'] = Color3.fromRGB(1, 1, 1)\r\n            }\r\n        }\r\n    },\r\n    ['Panic'] = {\r\n        ['Enabled'] = true, \r\n        ['KeyBind'] = \"M\",\r\n    },\r\n    ['Airshot'] = {\r\n        ['Enabled'] = true,\r\n        ['Point'] = \"LowerTorso\"\r\n    },\r\n    ['MemorySpoofer'] = {\r\n        [\"MemSpoofer\"] = true, \r\n        [\"Minimum\"] = 600, \r\n        [\"Maximum\"] = 950, \r\n    },  \r\n    ['Options'] = {\r\n        ['Headless'] = true,\r\n        ['Korblox'] = true,\r\n    },\r\n    ['Fps_Unlocker'] = {\r\n        ['Enabled'] = true,\r\n        ['Cap'] = 999,\r\n    },\r\n    ['Macro'] = {\r\n        ['Enabled'] = true,\r\n        ['Bind'] = \"M\",\r\n        ['Abuse'] = true,\r\n        ['Speed'] = 0.02,\r\n    }\r\n}\r\n\r\n\r\nscript_key = getgenv().Tapped.Whitelist.LuaKey\r\n\r\n\r\nlocal Players = game:GetService(\"Players\")\r\nlocal RunService = game:GetService(\"RunService\")\r\nlocal Workspace = game:GetService(\"Workspace\")\r\nlocal Gui = game:GetService(\"GuiService\")\r\n\r\nlocal SilentTarget = nil\r\nlocal CamlockTarget = nil\r\nlocal PredictionValue = 0.133\r\nlocal LocalPlayer = Players.LocalPlayer\r\nlocal Mouse = LocalPlayer:GetMouse()\r\nlocal CurrentCamera = Workspace.CurrentCamera\r\nlocal v3 = Vector3\r\nlocal CF = CFrame\r\nlocal v2 = Vector2\r\nlocal closestsilentbodypart = \"HumanoidRootPart\"\r\nlocal closestcamlockpart = \"HumanoidRootPart\"\r\n\r\n\r\nfunction notify(text) \r\n    game:GetService(\"StarterGui\"):SetCore(\"SendNotification\",{\r\n        Title = \"MinixV2\",\r\n        Text = text, \r\n        Duration = 5,\r\n    })\r\nend\r\n\r\nif Tapped.Configuration.Loader.Enabled then \r\n    local cam = workspace.CurrentCamera\r\n    local x = cam.ViewportSize.X\r\n    local y = cam.ViewportSize.Y\r\n    local newx = math.floor(x * 0.5)\r\n    local newy = math.floor(y * 0.5)\r\n\r\n    local SpashScreen = Instance.new(\"ScreenGui\")\r\n    local Image = Instance.new(\"ImageLabel\")\r\n    SpashScreen.Name = \"SpashScreen\"\r\n    SpashScreen.Parent = game.CoreGui\r\n    SpashScreen.ZIndexBehavior = Enum.ZIndexBehavior.Sibling\r\n    Image.Name = \"Image\"\r\n    Image.Parent = SpashScreen\r\n    Image.BackgroundColor3 = Color3.fromRGB(255, 255, 255)\r\n    Image.BackgroundTransparency = 1\r\n    Image.Position = UDim2.new(0, newx, 0, newy)\r\n    Image.Size = UDim2.new(0, 825, 0, 377)\r\n    Image.Image = \"rbxassetid://14932648871\"\r\n    Image.ImageTransparency = 1\r\n    Image.AnchorPoint = v2.new(0.5,0.5)\r\n\r\n    local Blur = Instance.new(\"BlurEffect\")\r\n    Blur.Parent = game.Lighting\r\n    Blur.Size = 0\r\n    Blur.Name = math.random(1,123123)\r\n\r\n    local function gui(last, sex, t, s, inorout)\r\n        local TI = TweenInfo.new(t or 1, s or Enum.EasingStyle.Sine, Enum.EasingDirection.InOut)\r\n        local Tweening = game:GetService(\"TweenService\"):Create(last, TI, sex)\r\n        Tweening:Play()\r\n    end\r\n\r\n    gui(Image, {ImageTransparency = 0},0.3)\r\n    gui(Blur, {Size = 20},0.3)\r\n    wait(3)\r\n    gui(Image, {ImageTransparency = 1},0.3)\r\n    gui(Blur, {Size = 0},0.3)\r\n    wait(0.3)\r\nend\r\n\r\n\r\nif not LPH_OBFUSCATED and not LPH_JIT_ULTRA then\r\n    LPH_NO_VIRTUALIZE = function(f) return f end\r\nend\r\n\r\n\r\nlocal txt = Drawing.new(\"Text\")\r\ntxt.Text = \"Target : \"..tostring(SilentTarget)\r\ntxt.Color = Color3.fromRGB(255, 255, 255)\r\ntxt.Size = 11\r\ntxt.Font = 2\r\ntxt.Outline = true\r\ntxt.Visible = false\r\n\r\nlocal Line = Drawing.new(\"Line\") \r\nLine.Visible = false \r\nLine.Thickness = 1 \r\nLine.Transparency = 1 \r\nLine.Radius = 5 \r\nLine.Color = Color3.new(1,1,1)\r\n\r\nlocal Circle = Drawing.new(\"Circle\")\r\nCircle.Transparency = Tapped['Drawings Thug'].Circle.Silent.Transparency\r\nCircle.Radius = Tapped['Drawings Thug'].Circle.Silent.Size\r\nCircle.Visible = Tapped['Drawings Thug'].Circle.Silent.Visible\r\nCircle.Color = Tapped['Drawings Thug'].Circle.Silent.Color\r\nCircle.Thickness = Tapped['Drawings Thug'].Circle.Silent.Thickness\r\nCircle.Filled = Tapped['Drawings Thug'].Circle.Silent.Filled\r\n\r\nlocal Circle2 = Drawing.new(\"Circle\")\r\nCircle2.Transparency = Tapped['Drawings Thug'].Circle.Aimbot.Transparency\r\nCircle2.Radius = Tapped['Drawings Thug'].Circle.Aimbot.Size * 3\r\nCircle2.Visible = Tapped['Drawings Thug'].Circle.Aimbot.Visible\r\nCircle2.Color = Tapped['Drawings Thug'].Circle.Aimbot.Color\r\nCircle2.Thickness = Tapped['Drawings Thug'].Circle.Aimbot.Thickness\r\nCircle2.Filled = Tapped['Drawings Thug'].Circle.Aimbot.Filled\r\n\r\n\r\n\r\nlocal Vis1 = Drawing.new(\"Circle\")\r\nVis1.Filled = Tapped['Drawings Thug'].Dot.Filled\r\nVis1.Visible = false\r\nVis1.Thickness = Tapped['Drawings Thug'].Dot.Thickness\r\nVis1.Transparency = Tapped['Drawings Thug'].Dot.Transparency\r\nVis1.Radius = Tapped['Drawings Thug'].Dot.Size\r\nVis1.Color = Tapped['Drawings Thug'].Dot.Color\r\n\r\nlocal Vis2 = Drawing.new(\"Circle\")\r\nVis2.Filled = true\r\nVis2.Visible = false\r\nVis2.Thickness = 1\r\nVis2.Transparency = 1\r\nVis2.Radius = 5\r\nVis2.Color = Color3.new(1,1,1)\r\n\r\nOnScreen = function(Object)\r\n    local _, screen = CurrentCamera:WorldToScreenPoint(Object.Position)\r\n    return screen\r\nend\r\n\r\n\r\nRayCastCheck = function(Part, PartDescendant)\r\n    local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded.Wait(LocalPlayer.CharacterAdded)\r\n    local Origin = CurrentCamera.CFrame.Position\r\n\r\n    local RayCastParams = RaycastParams.new()\r\n    RayCastParams.FilterType = Enum.RaycastFilterType.Blacklist\r\n    RayCastParams.FilterDescendantsInstances = {Character, CurrentCamera}\r\n\r\n    local Result = Workspace.Raycast(Workspace, Origin, Part.Position - Origin, RayCastParams)\r\n    \r\n    if (Result) then\r\n        local PartHit = Result.Instance\r\n        local Visible = (not PartHit or Instance.new(\"Part\").IsDescendantOf(PartHit, PartDescendant))\r\n        \r\n        return Visible\r\n    end\r\n    return false\r\nend\r\n\r\nAlive = function(Plr)\r\n    if Plr and Plr.Character and Plr.Character:FindFirstChild(\"HumanoidRootPart\") ~= nil and Plr.Character:FindFirstChild(\"Humanoid\") ~= nil and Plr.Character:FindFirstChild(\"Head\") ~= nil then\r\n        return true\r\n    end\r\n    return false\r\nend\r\n\r\n\r\nGetMagnitudeFromMouse = function(Part)\r\n    local PartPos, OnScreen = CurrentCamera:WorldToScreenPoint(Part.Position)\r\n    if OnScreen then\r\n        local Magnitude = (v2.new(PartPos.X, PartPos.Y) - v2.new(Mouse.X, Mouse.Y)).Magnitude\r\n        return Magnitude\r\n    end\r\n    return math.huge\r\nend\r\n\r\nGetPrediction = function() \r\n    if Tapped['Global']['Auto Prediction'] then \r\n\r\n        local PingStats = game:GetService(\"Stats\").Network.ServerStatsItem[\"Data Ping\"]:GetValueString()\r\n        local Value = tostring(PingStats)\r\n        local PingValue = Value:split(\" \")\r\n        local PingNumber = tonumber(PingValue[1])\r\n\r\n        if PingNumber \u003C 130 then\r\n            return tonumber(PingNumber / 1000 + 0.037)\r\n        else\r\n            return tonumber(PingNumber / 1000 + 0.033)\r\n        end\r\n    else\r\n        return tonumber(Tapped['Silent Aim'].Config.Velocity.Prediction)\r\n    end\r\nend\r\n\r\nif Tapped.Configuration.Checks['Auto Low GFX'] then\r\n    for _,v in pairs(workspace:GetDescendants()) do\r\n    if v.ClassName == \"Part\"\r\n    or v.ClassName == \"SpawnLocation\"\r\n    or v.ClassName == \"WedgePart\"\r\n    or v.ClassName == \"Terrain\"\r\n    or v.ClassName == \"MeshPart\" then\r\n    v.Material = \"Plastic\"\r\n    end\r\nend\r\nend\r\n\r\n\r\n\r\nif Tapped.Configuration.Checks['Auto Mute Boombox'] == true then \r\n    for i,v in pairs(game.Players:GetChildren()) do \r\n        if v.Name ~= game.Players.LocalPlayer.Name then \r\n            if game.Players:FindFirstChild(v.Name) then \r\n                repeat wait() until v.Character\r\n                for i,x in pairs(v.Character:GetDescendants()) do\r\n                    if x:IsA(\"Sound\") and x.Playing == true then\r\n                        x.Playing = false\r\n                    end\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nlocal function velocityCalculation(SilentTarget)\r\n    if Tapped['Silent Aim'].Enabled then\r\n        if SilentTarget and SilentTarget.Character.HumanoidRootPart then\r\n            local currentPosition = SilentTarget.Character.HumanoidRootPart.Position\r\n            local currentTime = tick() \r\n            wait(0.0035)\r\n            \r\n            local newPosition = SilentTarget.Character.HumanoidRootPart.Position\r\n            local newTime = tick()\r\n            local timeInterval = (newTime-currentTime)\r\n            local newVelocity = (newPosition-currentPosition)/timeInterval\r\n            \r\n            currentPosition = newPosition\r\n            currentTime = newTime\r\n            return newVelocity\r\n        end\r\n    end\r\nend\r\n\r\n\r\n\r\nFindCrew = function(Player)\r\n    if Player:FindFirstChild(\"DataFolder\") and Player.DataFolder:FindFirstChild(\"Information\") and Player.DataFolder.Information:FindFirstChild(\"Crew\") and LocalPlayer:FindFirstChild(\"DataFolder\") and LocalPlayer.DataFolder:FindFirstChild(\"Information\") and LocalPlayer.DataFolder.Information:FindFirstChild(\"Crew\") then\r\n        if LocalPlayer.DataFolder.Information:FindFirstChild(\"Crew\").Value ~= nil and Player.DataFolder.Information:FindFirstChild(\"Crew\").Value ~= nil and Player.DataFolder.Information:FindFirstChild(\"Crew\").Value ~= \"\" and LocalPlayer.DataFolder.Information:FindFirstChild(\"Crew\").Value ~= \"\" then \r\n            return true\r\n        end\r\n    end\r\n    return false\r\nend\r\n\r\nGetGunName = function(Name)\r\n    local split = string.split(string.split(Name, \"[\")[2], \"]\")[1]\r\n    return split\r\nend\r\n\r\nGetCurrentWeaponName = function()\r\n    if LocalPlayer.Character and LocalPlayer.Character:FindFirstChildWhichIsA(\"Tool\") then\r\n       local Tool =  LocalPlayer.Character:FindFirstChildWhichIsA(\"Tool\")\r\n       if string.find(Tool.Name, \"%[\") and string.find(Tool.Name, \"%]\") and not string.find(Tool.Name, \"Wallet\") and not string.find(Tool.Name, \"Phone\") then\r\n          return GetGunName(Tool.Name)\r\n       end\r\n    end\r\n    return nil\r\nend\r\n\r\nWTS = function(Object)\r\n    local ObjectVector = CurrentCamera:WorldToScreenPoint(Object.Position)\r\n    return v2.new(ObjectVector.X, ObjectVector.Y)\r\nend\r\n\r\nFilter = function(obj)\r\n    if (obj:IsA('BasePart')) then\r\n        return true\r\n    end\r\nend\r\n\r\nmousePosv2 = function()\r\n    return v2.new(Mouse.X, Mouse.Y) \r\nend\r\n\r\nIsOnScreen2 = function(Object)\r\n    local IsOnScreen = CurrentCamera:WorldToScreenPoint(Object.Position)\r\n    return IsOnScreen\r\nend\r\n\r\nFilterObjs = function(Object)\r\n    if string.find(Object.Name, \"Gun\") then\r\n        return\r\n    end\r\n    if table.find({\"Part\", \"MeshPart\", \"BasePart\"}, Object.ClassName) then\r\n        return true\r\n    end\r\nend\r\n\r\n\r\nGetClosestBodyPart = function()\r\n    local character = SilentTarget.Character\r\n    local ClosestDistance = 1 / 0\r\n    local BodyPart = nil\r\n    if (character and character:GetChildren()) then\r\n        for _, x in next, character:GetChildren() do\r\n            if FilterObjs(x) and IsOnScreen2(x) then\r\n                local Distance = (WTS(x) - v2.new(Mouse.X, Mouse.Y)).Magnitude\r\n                    if (Distance \u003C ClosestDistance) then\r\n                        ClosestDistance = Distance\r\n                        BodyPart = x\r\n                    end\r\n            end\r\n        end\r\n    end\r\n    if Tapped['Silent Aim'].Config.Points['Nearest Part'] then \r\n        closestsilentbodypart = tostring(BodyPart)\r\n    else\r\n        closestsilentbodypart = Tapped['Silent Aim'].Config.Points.Point\r\n    end\r\n\r\nend\r\n\r\nGetClosestBodyPart2 = function()\r\n    local character = CamlockTarget.Character\r\n    local ClosestDistance = 1 / 0\r\n    local BodyPart = nil\r\n    if (character and character:GetChildren()) then\r\n        for _, x in next, character:GetChildren() do\r\n            if FilterObjs(x) and IsOnScreen2(x) then\r\n                local Distance = (WTS(x) - v2.new(Mouse.X, Mouse.Y)).Magnitude\r\n                    if (Distance \u003C ClosestDistance) then\r\n                        ClosestDistance = Distance\r\n                        BodyPart = x\r\n                    end\r\n            end\r\n        end\r\n    end\r\n    if Tapped['Cam Lock']['Nearest Part'] then \r\n        closestcamlockpart = tostring(BodyPart)\r\n    else\r\n        closestcamlockpart = Tapped['Cam Lock'].Point\r\n    end\r\nend\r\n\r\nUpdateFOV = function()\r\n    Circle.Transparency = Tapped['Drawings Thug'].Circle.Silent.Transparency\r\n    Circle.Radius = Tapped['Drawings Thug'].Circle.Silent.Size \r\n    Circle.Visible = Tapped['Drawings Thug'].Circle.Silent.Visible\r\n    Circle.Color = Tapped['Drawings Thug'].Circle.Silent.Color\r\n    Circle.Thickness = Tapped['Drawings Thug'].Circle.Silent.Thickness\r\n    Circle.Filled = Tapped['Drawings Thug'].Circle.Silent.Filled\r\nend\r\n\r\nUpdateFOV2 = function()\r\n    Circle2.Transparency = Tapped['Drawings Thug'].Circle.Aimbot.Transparency\r\n    Circle2.Radius = Tapped['Drawings Thug'].Circle.Aimbot.Size \r\n    Circle2.Visible = Tapped['Drawings Thug'].Circle.Aimbot.Visible\r\n    Circle2.Color = Tapped['Drawings Thug'].Circle.Aimbot.Color\r\n    Circle2.Thickness = Tapped['Drawings Thug'].Circle.Aimbot.Thickness\r\n    Circle2.Filled = Tapped['Drawings Thug'].Circle.Aimbot.Filled\r\n    Circle2.Position = Vector2.new(Mouse.X, Mouse.Y + (game:GetService(\"GuiService\"):GetGuiInset().Y))\r\nend\r\n\r\n\r\nCalculateChance = function(Percentage)\r\n    Percentage = math.floor(Percentage)\r\n    local chance = math.floor(Random.new().NextNumber(Random.new(), 0, 1) * 100) / 100\r\n\r\n    return chance \u003C Percentage / 100\r\nend\r\n\r\nGetClosestPlayer = function()\r\n    local Target = nil\r\n    local Closest = math.huge\r\n\r\n    local HitChance = CalculateChance(Tapped['Silent Aim'].Config['Hit Chance'])\r\n\r\n    if not HitChance then\r\n        return nil\r\n    end\r\n\r\n    for _, v in pairs(Players:GetPlayers()) do\r\n        if v.Character and v ~= LocalPlayer and v.Character:FindFirstChild(\"HumanoidRootPart\") then\r\n            if not OnScreen(v.Character.HumanoidRootPart) then \r\n                continue\r\n            end\r\n            if Tapped.Checks['Visible Check'] and not RayCastCheck(v.Character.HumanoidRootPart, v.Character) then \r\n                continue \r\n            end\r\n            if Tapped.Checks['K.O Check'] and v.Character:FindFirstChild(\"BodyEffects\") then\r\n                local KoCheck \r\n                if game.PlaceId == 7242996350 or game.PlaceId == 12884917481 then \r\n                    KoCheck = v.Character.BodyEffects:FindFirstChild(\"KO\").Value\r\n                else\r\n                    KoCheck = v.Character.BodyEffects:FindFirstChild(\"K.O\").Value\r\n                end\r\n                local Grabbed = v.Character:FindFirstChild(\"GRABBING_CONSTRAINT\") ~= nil\r\n                if KoCheck or Grabbed then\r\n                    continue\r\n                end\r\n            end\r\n            if Tapped.Checks['Crew Check'] and FindCrew(v) and v.DataFolder.Information:FindFirstChild(\"Crew\").Value == LocalPlayer.DataFolder.Information:FindFirstChild(\"Crew\").Value then\r\n                continue\r\n            end\r\n\r\n            local Distance = GetMagnitudeFromMouse(v.Character.HumanoidRootPart)\r\n\r\n            if (Distance \u003C Closest and Circle.Radius + 10 > Distance) then\r\n                Closest = Distance\r\n                Target = v\r\n            end\r\n        end\r\n    end\r\n\r\n    SilentTarget = Target\r\nend\r\n\r\nGetClosestPlayer2 = function()\r\n    local Target = nil\r\n    local Closest = math.huge\r\n\r\n    for _, v in pairs(Players:GetPlayers()) do\r\n        if v.Character and v ~= LocalPlayer and v.Character:FindFirstChild(\"HumanoidRootPart\") then\r\n            if not OnScreen(v.Character.HumanoidRootPart) then \r\n                continue \r\n            end\r\n            if Tapped.Checks['Visible Check'] and not RayCastCheck(v.Character.HumanoidRootPart, v.Character) then \r\n                continue \r\n            end\r\n            if Tapped.Checks['K.O Check'] and v.Character:FindFirstChild(\"BodyEffects\") then\r\n                local KoCheck \r\n                if game.PlaceId == 7242996350 or game.PlaceId == 12884917481 then \r\n                    KoCheck = v.Character.BodyEffects:FindFirstChild(\"KO\").Value\r\n                else\r\n                    KoCheck = v.Character.BodyEffects:FindFirstChild(\"K.O\").Value\r\n                end\r\n                local Grabbed = v.Character:FindFirstChild(\"GRABBING_CONSTRAINT\") ~= nil\r\n                if KoCheck or Grabbed then\r\n                    continue\r\n                end\r\n            end\r\n            if Tapped.Checks['Crew Check'] and FindCrew(v) and v.DataFolder.Information:FindFirstChild(\"Crew\").Value == LocalPlayer.DataFolder.Information:FindFirstChild(\"Crew\").Value then\r\n                continue\r\n            end\r\n\r\n            local Distance = GetMagnitudeFromMouse(v.Character.HumanoidRootPart)\r\n\r\n            if (Distance \u003C Closest and Circle2.Radius + 10 > Distance) then\r\n                Closest = Distance\r\n                Target = v\r\n            end\r\n        end\r\n    end\r\n\r\n    CamlockTarget = Target\r\nend\r\n\r\nfunction checkifplayer(obj) \r\n    if game.Players:FindFirstChild(obj.Name) then \r\n        return true\r\n    else\r\n        return false\r\n    end\r\nend\r\n\r\nLocalPlayer.Character.ChildAdded:Connect(function(Weapon)\r\n    if Tapped['Weapon Modifications'].Enabled == true then\r\n        local dis = (LocalPlayer.Character.HumanoidRootPart.Position - SilentTarget.Character.HumanoidRootPart.Position).Magnitude\r\n        if SilentTarget then\r\n            if Weapon.Name == \"[Double-Barrel SG]\" then\r\n                if Tapped['Weapon Modifications']['Double Barrel'].FOV == true and Tapped['Weapon Modifications']['Double Barrel'].Prediction == true and Tapped['Weapon Modifications']['Double Barrel'].Smoothness == true and Tapped['Weapon Modifications']['Double Barrel']['Hit Chance'] == true then\r\n                    if dis \u003C Tapped['Weapon Modifications']['Double Barrel']['Close Detection'] then\r\n                        Tapped['Drawings Thug'].Circle.Silent.Size = Tapped['Weapon Modifications']['Double Barrel']['Close FOV'] * 3\r\n                        Tapped['Silent Aim']['Hit Chance'] = Tapped['Weapon Modifications']['Double Barre']['Close Hit Chance']\r\n                        Tapped['Silent Aim'].Config.Velocity.Prediction = Tapped['Weapon Modifications']['Tactical Shotgun']['Close Prediction']\r\n                    elseif dis \u003C Tapped['Weapon Modifications']['Double Barrel']['Mid Detection'] then\r\n                        Tapped['Drawings Thug'].Circle.Silent.Size = Tapped['Weapon Modifications']['Double Barrel']['Mid FOV'] * 3\r\n                        Tapped['Silent Aim'].Config.Velocity.Prediction = Tapped['Weapon Modifications']['Double Barrel']['Mid Prediction']\r\n                        Tapped['Silent Aim']['Hit Chance'] = Tapped['Weapon Modifications']['Double Barrel']['Close Hit Chance']\r\n                    elseif dis \u003C Tapped['Weapon Modifications']['Double Barrel']['Far Detection'] then\r\n                        Tapped['Drawings Thug'].Circle.Silent.Size = Tapped['Weapon Modifications']['Double Barrel']['Far FOV'] * 3\r\n                        Tapped['Silent Aim'].Config.Velocity.Prediction = Tapped['Weapon Modifications']['Double Barrel']['Far Prediction']\r\n                        Tapped['Silent Aim']['Hit Chance'] = Tapped['Weapon Modifications']['Double Barrel']['Close Hit Chance']\r\n                    end\r\n                end\r\n            end\r\n            if Weapon.Name == \"[Revolver]\" then\r\n                if Tapped['Weapon Modifications'].Revolver.FOV == true and Tapped['Weapon Modifications'].Revolver.Prediction == true and Tapped['Weapon Modifications'].Revolver.Smoothness == true and Tapped['Weapon Modifications'].Revolver['Hit Chance'] == true then\r\n                    if dis \u003C Tapped['Weapon Modifications'].Revolver['Close Detection'] then\r\n                        Tapped['Drawings Thug'].Circle.Silent.Size = Tapped['Weapon Modifications'].Revolver['Close FOV'] * 3\r\n                        Tapped['Silent Aim'].Config.Velocity.Prediction = Tapped['Weapon Modifications'].Revolver['Close Prediction']\r\n                        Tapped['Silent Aim']['Hit Chance'] = Tapped['Weapon Modifications'].Revolver['Close Hit Chance']\r\n                    elseif dis \u003C Tapped['Weapon Modifications'].Revolver['Mid Detection'] then\r\n                        Tapped['Drawings Thug'].Circle.Silent.Size = Tapped['Weapon Modifications'].Revolver['Mid FOV'] * 3\r\n                        Tapped['Silent Aim'].Config.Velocity.Prediction = Tapped['Weapon Modifications'].Revolver['Mid Prediction']\r\n                        Tapped['Silent Aim']['Hit Chance'] = Tapped['Weapon Modifications'].Revolver['Mid Hit Chance']\r\n                    elseif dis \u003C Tapped['Weapon Modifications'].Revolver['Far Detection'] then\r\n                        Tapped['Drawings Thug'].Circle.Silent.Size = Tapped['Weapon Modifications'].Revolver['Far FOV'] * 3\r\n                        Tapped['Silent Aim'].Config.Velocity.Prediction = Tapped['Weapon Modifications'].Revolver['Far Prediction']                        \r\n                        Tapped['Silent Aim']['Hit Chance'] = Tapped['Weapon Modifications'].Revolver['Far Hit Chance']\r\n                    end\r\n                end\r\n            end\r\n            if Weapon.Name == \"[TacticalShotgun]\" then\r\n                if Tapped['Weapon Modifications']['Tactical Shotgun'].FOV == true and Tapped['Weapon Modifications']['Tactical Shotgun'].Prediction == true and Tapped['Weapon Modifications']['Tactical Shotgun'].Smoothness == true and Tapped['Weapon Modifications']['Tactical Shotgun']['Hit Chance'] == true then\r\n                    if dis \u003C Tapped['Weapon Modifications']['Tactical Shotgun']['Close Detection'] then\r\n                        Tapped['Drawings Thug'].Circle.Silent.Size = Tapped['Weapon Modifications']['Tactical Shotgun']['Close FOV'] * 3\r\n                        Tapped['Silent Aim'].Config.Velocity.Prediction = Tapped['Weapon Modifications']['Tactical Shotgun']['Close Prediction']\r\n                        Tapped['Silent Aim']['Hit Chance'] = Tapped['Weapon Modifications']['Tactical Shotgun']['Close Hit Chance']\r\n                    elseif dis \u003C Tapped['Weapon Modifications']['Tactical Shotgun']['Mid Detection'] then\r\n                        Tapped['Drawings Thug'].Circle.Silent.Size = Tapped['Weapon Modifications']['Tactical Shotgun']['Mid FOV'] * 3\r\n                        Tapped['Silent Aim'].Config.Velocity.Prediction = Tapped['Weapon Modifications']['Tactical Shotgun']['Mid Prediction']\r\n                        Tapped['Silent Aim']['Hit Chance'] = Tapped['Weapon Modifications']['Tactical Shotgun']['Close Hit Chance']\r\n                    elseif dis \u003C Tapped['Weapon Modifications']['Tactical Shotgun']['Far Detection'] then\r\n                        Tapped['Drawings Thug'].Circle.Silent.Size = Tapped['Weapon Modifications']['Tactical Shotgun']['Far FOV'] * 3\r\n                        Tapped['Silent Aim'].Config.Velocity.Prediction = Tapped['Weapon Modifications']['Tactical Shotgun']['Far Prediction']\r\n                        Tapped['Silent Aim']['Hit Chance'] = Tapped['Weapon Modifications']['Tactical Shotgun']['Close Hit Chance']\r\n                    end\r\n                end\r\n            end\r\n            if Weapon.Name == \"[Rifle]\" then\r\n                if Tapped['Weapon Modifications'].Rifle.FOV == true and Tapped['Weapon Modifications'].Rifle.Prediction == true and Tapped['Weapon Modifications'].Rifle.Smoothness == true then\r\n                    if dis \u003C Tapped['Weapon Modifications'].Rifle['Close Detection'] then\r\n                        Tapped['Drawings Thug'].Circle.Silent.Size = Tapped['Weapon Modifications'].Rifle['Close FOV'] * 3\r\n                        Tapped['Silent Aim'].Config.Velocity.Prediction =\r\n                            Tapped['Weapon Modifications']['Tactical Shotgun']['Close Prediction']\r\n                    elseif dis \u003C Tapped['Weapon Modifications'].Rifle['Mid Detection'] then\r\n                        Tapped['Drawings Thug'].Circle.Silent.Size = Tapped['Weapon Modifications'].Rifle['Mid FOV'] * 3\r\n                        Tapped['Silent Aim'].Config.Velocity.Prediction = Tapped['Weapon Modifications'].Rifle['Mid Prediction']\r\n                    elseif dis \u003C Tapped['Weapon Modifications'].Rifle['Far Detection'] then\r\n                        Tapped['Drawings Thug'].Circle.Silent.Size = Tapped['Weapon Modifications'].Rifle['Far FOV'] * 3\r\n                        Tapped['Silent Aim'].Config.Velocity.Prediction = Tapped['Weapon Modifications'].Rifle['Far Prediction']\r\n                    end\r\n                end\r\n            end\r\n            if Weapon.Name == \"[Shotgun]\" then\r\n                if Tapped['Weapon Modifications'].Shotgun.FOV == true and Tapped['Weapon Modifications'].Shotgun.Prediction == true and Tapped['Weapon Modifications'].Shotgun.Smoothness == true then\r\n                    if dis \u003C Tapped['Weapon Modifications'].Shotgun['Close Detection'] then\r\n                        Tapped['Drawings Thug'].Circle.Silent.Size = Tapped['Weapon Modifications'].Shotgun['Close FOV'] * 3\r\n                        Tapped['Silent Aim'].Config.Velocity.Prediction =\r\n                            Tapped['Weapon Modifications']['Tactical Shotgun']['Close Prediction']\r\n                    elseif dis \u003C Tapped['Weapon Modifications'].Shotgun['Mid Detection'] then\r\n                        Tapped['Drawings Thug'].Circle.Silent.Size = Tapped['Weapon Modifications'].Shotgun['Mid FOV'] * 3\r\n                        Tapped['Silent Aim'].Config.Velocity.Prediction = Tapped['Weapon Modifications'].Shotgun['Mid Prediction']\r\n                    elseif dis \u003C Tapped['Weapon Modifications'].Shotgun['Far Detection'] then\r\n                        Tapped['Drawings Thug'].Circle.Silent.Size = Tapped['Weapon Modifications'].Shotgun['Far FOV'] * 3\r\n                        Tapped['Silent Aim'].Config.Velocity.Prediction = Tapped['Weapon Modifications'].Shotgun['Far Prediction']\r\n            \r\n                    end\r\n                end\r\n            end\r\n        end\r\n    end\r\nend)\r\n\r\n\r\n\r\nfunction GetClosestPointOfPart(Part)\r\n    local mouseray = Mouse.UnitRay\r\n    mouseray = mouseray.Origin + (mouseray.Direction * (Part.Position - mouseray.Origin).Magnitude)\r\n    local point =\r\n        (mouseray.Y >= (Part.Position - Part.Size / 2).Y and mouseray.Y \u003C= (Part.Position + Part.Size / 2).Y) and\r\n            (Part.Position + v3.new(0, -Part.Position.Y + mouseray.Y, 0)) or Part.Position\r\n    local check = RaycastParams.new()\r\n    check.FilterType = Enum.RaycastFilterType.Whitelist\r\n    check.FilterDescendantsInstances = {Part}\r\n    local ray = game:GetService(\"Workspace\"):Raycast(mouseray, (point - mouseray), check)\r\n    if ray then\r\n        return ray.Position\r\n    else\r\n        return Mouse.Hit.Position\r\n    end\r\nend\r\n\r\nRunService.Heartbeat:Connect(function()\r\n    UpdateFOV()\r\n    UpdateFOV2()\r\n    Tapped['Cam Lock'].Prediction = GetPrediction()\r\n    if Tapped['Silent Aim'].Enabled then \r\n        GetClosestPlayer()\r\n        if Tapped['Silent Aim'].Config.Points['Nearest Part'] and SilentTarget then \r\n            GetClosestBodyPart()\r\n        end\r\n    end\r\n    if Tapped['Cam Lock'].Enabled then\r\n        GetClosestPlayer()\r\n        if Tapped['Cam Lock']['Nearest Part'] and CamlockTarget then \r\n            GetClosestBodyPart2()\r\n        end\r\n    end\r\nend)\r\n\r\nRunService.RenderStepped:Connect(function()\r\n    if Tapped['Drawings Thug'].Circle.Silent.Stick and SilentTarget ~= nil and (SilentTarget.Character) then\r\n        local Vector, OnScreen = CurrentCamera:WorldToViewportPoint(SilentTarget.Character[Tapped['Silent Aim'].Config.Points.Point].Position)\r\n        Circle.Position = Vector2.new(Vector.X, Vector.Y)\r\n        Circle.Position = Vector2.new(Vector.X, Vector.Y)\r\n    else\r\n        Circle.Position = Vector2.new(Mouse.X, Mouse.Y + (game:GetService(\"GuiService\"):GetGuiInset().Y))\r\n        Circle.Position = Vector2.new(Mouse.X, Mouse.Y + (game:GetService(\"GuiService\"):GetGuiInset().Y))\r\n    end\r\nend)\r\n\r\nRunService.RenderStepped:Connect(function()\r\n    if true and SilentTarget ~= nil and (SilentTarget.Character) then\r\n        local Vector, OnScreen = CurrentCamera:WorldToViewportPoint(SilentTarget.Character[Tapped['Silent Aim'].Config.Points.Point].Position)\r\n        Line.Visible = true\r\n        Line.From = Vector2.new(Mouse.X, Mouse.Y + (game:GetService(\"GuiService\"):GetGuiInset().Y))\r\n        Line.To = Vector2.new(Vector.X, Vector.Y)\r\n    else\r\n        Line.Visible = false\r\n    end\r\nend)\r\n\r\nlocal txt1 = true\r\nRunService.RenderStepped:Connect(function()\r\n    if txt1 and SilentTarget ~= nil and (SilentTarget.Character) then\r\n        local Vector, OnScreen = CurrentCamera:WorldToViewportPoint(SilentTarget.Character[Tapped['Silent Aim'].Config.Points.Point].Position)\r\n        txt.Visible = true\r\n        txt.Position = Vector2.new(Vector.X, Vector.Y)\r\n    else\r\n        txt.Visible = false\r\n    end\r\nend)\r\n\r\n\r\n\r\nRunService.Heartbeat:Connect(function()\r\n    if Tapped['Silent Aim'].Enabled and Tapped['Silent Aim'].Dot and SilentTarget then \r\n        local targetbone\r\n        if Tapped.Airshot.Enabled then\r\n            if SilentTarget.Character.Humanoid.Jump == true then\r\n                targetbone = SilentTarget.Character[Tapped.Airshot.Point]\r\n            else\r\n                targetbone = SilentTarget.Character[closestsilentbodypart]\r\n            end\r\n        else\r\n            targetbone = SilentTarget.Character[Tapped['Silent Aim'].Config.Points.Point]\r\n        end\r\n        local TargetCF = targetbone.Position\r\n        if Tapped['Silent Aim'].Config.Points['Nearest Point'] then\r\n            TargetCF = GetClosestPointOfPart(targetbone)\r\n        end\r\n        local Prediction\r\n        if not Tapped.Resolver.Enabled then \r\n            Prediction = TargetCF + v3.new(0,Tapped['Silent Aim'].Config.Points['Point Offset'],0) + targetbone.Velocity * Tapped['Silent Aim'].Config.Velocity.Prediction\r\n        else\r\n            if Tapped.Resolver.Method == \"MoveDirection\" then \r\n                Prediction = TargetCF + v3.new(0,Tapped['Silent Aim'].Config.Points['Point Offset'],0) + SilentTarget.Character.Humanoid.MoveDirection * Tapped['Silent Aim'].Config.Velocity.Prediction * 16\r\n            elseif Tapped.Resolver.Method == \"Delta\"  then\r\n                Prediction = TargetCF + v3.new(0,Tapped['Silent Aim'].Config.Points['Point Offset'],0) + velocityCalculation(SilentTarget) * Tapped['Silent Aim'].Config.Velocity.Prediction \r\n            elseif Tapped.Resolver.Method == \"No Prediction\" then\r\n                Prediction = TargetCF + v3.new(0,Tapped['Silent Aim'].Config.Points['Point Offset'],0)\r\n            elseif Tapped.Resolver.Method == \"Underground\" then\r\n                targetbone.Velocity = v3.new(targetbone.Velocity.X, 0, targetbone.Velocity.Z)\r\n                targetbone.AssemblyLinearVelocity = v3.new(targetbone.Velocity.X, 0, targetbone.Velocity.Z)\r\n                Prediction = TargetCF + v3.new(0,Tapped['Silent Aim'].Config.Points['Point Offset'],0) + targetbone.Velocity * Tapped['Silent Aim'].Config.Velocity.Prediction\r\n            end\r\n        end\r\n        Vis1.Position = CurrentCamera:WorldToViewportPoint(Prediction)\r\n        Vis1.Visible = Tapped['Drawings Thug'].Dot.Visible\r\n    else\r\n        Vis1.Visible = false\r\n    end \r\n    if Tapped['Cam Lock'].Enabled and Tapped['Cam Lock'].Dot and CamlockTarget then \r\n        local targetbone\r\n        local shake = v3.new(0,0,0)\r\n        if Tapped.Airshot.Enabled then\r\n            if CamlockTarget.Character.Humanoid.Jump == true then\r\n                targetbone = CamlockTarget.Character[Tapped.Airshot.Config.Points.Point]\r\n            else\r\n                targetbone = CamlockTarget.Character[closestcamlockpart]\r\n            end\r\n        else\r\n            targetbone = CamlockTarget.Character[Tapped['Cam Lock'].Config.Points.Point]\r\n        end\r\n        local TargetCF = targetbone.Position\r\n        if Tapped['Cam Lock']['Nearest Point'] then\r\n            TargetCF = GetClosestPointOfPart(targetbone)\r\n        end\r\n        if Tapped['Cam Lock'].Shake.Enabled then \r\n            shake = v3.new(\r\n                math.random(-Tapped['Cam Lock'].Shake.X, Tapped['Cam Lock'].Shake.X),\r\n                math.random(-Tapped['Cam Lock'].Shake.Y, Tapped['Cam Lock'].Shake.Y),\r\n                math.random(-Tapped['Cam Lock'].Shake.Z, Tapped['Cam Lock'].Shake.Z)\r\n            ) * 0.1\r\n        end\r\n        local Prediction\r\n        if not Tapped.Resolver.Enabled then \r\n            Prediction = TargetCF + v3.new(0,Tapped['Cam Lock']['Point Offset'],0) + targetbone.Velocity * Tapped['Cam Lock'].Prediction + shake\r\n        else\r\n            if Tapped.Resolver.Method == \"MoveDirection\" then \r\n                Prediction = TargetCF + v3.new(0,Tapped['Cam Lock']['Point Offset'],0) + CamlockTarget.Character.Humanoid.MoveDirection * Tapped['Cam Lock'].Prediction + shake * 16  \r\n            elseif Tapped.Resolver.Method == \"Delta\"  then\r\n                Prediction = TargetCF + v3.new(0,Tapped['Cam Lock']['Point Offset'],0) + velocityCalculation(CamlockTarget) * Tapped['Cam Lock'].Prediction + shake \r\n            elseif Tapped.Resolver.Method == \"No Prediction\"  then\r\n                Prediction = TargetCF + v3.new(0,Tapped['Cam Lock']['Point Offset'],0) + shake \r\n            elseif Tapped.Resolver.Method == \"Underground\"  then\r\n                targetbone.Velocity = v3.new(targetbone.Velocity.X, 0, targetbone.Velocity.Z)\r\n                targetbone.AssemblyLinearVelocity = v3.new(targetbone.Velocity.X, 0, targetbone.Velocity.Z)\r\n                Prediction = TargetCF + v3.new(0,Tapped['Cam Lock']['Point Offset'],0) + targetbone.Velocity * Tapped['Cam Lock'].Prediction + shake\r\n            end\r\n        end\r\n        Vis2.Position = CurrentCamera:WorldToViewportPoint(Prediction)\r\n        Vis2.Visible = true\r\n    else\r\n        Vis2.Visible = false\r\n    end \r\nend)\r\n\r\n\r\nlocal speeding = false\r\nMouse.KeyDown:Connect(function(Key)\r\n    if Key == (string.lower(Tapped.Macro.Bind)) and Tapped.Macro.Abuse == false then\r\n        if Tapped.Macro.Enabled then\r\n            speeding = not speeding\r\n            if speeding == true then\r\n                repeat task.wait(Tapped.Macro.Speed / 100)\r\n                game:GetService(\"VirtualInputManager\"):SendKeyEvent(true, \"I\", false, game)\r\n                task.wait(Tapped.Macro.Speed / 100)\r\n                game:GetService(\"VirtualInputManager\"):SendKeyEvent(true, \"O\", false, game)\r\n                task.wait(Tapped.Macro.Speed / 100)\r\n                game:GetService(\"VirtualInputManager\"):SendKeyEvent(true, \"I\", false, game)\r\n                task.wait(Tapped.Macro.Speed / 100)\r\n                game:GetService(\"VirtualInputManager\"):SendKeyEvent(true, \"O\", false, game)\r\n                task.wait(Tapped.Macro.Speed / 100)\r\n                until speeding == false\r\n            end\r\n        end\r\n    end\r\nend)\r\n\r\n\r\nMouse.KeyDown:Connect(function(Key)\r\n    if Key == (string.lower(Tapped.Macro.Bind)) and Tapped.Macro.Abuse == true then\r\n        if Tapped.Macro.Enabled  then\r\n            SpeedGlitch = not SpeedGlitch\r\n            if SpeedGlitch == true then\r\n                repeat task.wait(Tapped.Macro.Speed / 100)\r\n                    game:GetService(\"VirtualInputManager\"):SendMouseWheelEvent(\"0\", \"0\", true, game)\r\n                    task.wait(Tapped.Macro.Speed / 100)\r\n                    game:GetService(\"VirtualInputManager\"):SendMouseWheelEvent(\"0\", \"0\", false, game)\r\n                    task.wait(Tapped.Macro.Speed / 100)\r\n                    game:GetService(\"VirtualInputManager\"):SendMouseWheelEvent(\"0\", \"0\", true, game)\r\n                    task.wait(Tapped.Macro.Speed / 100)\r\n                    game:GetService(\"VirtualInputManager\"):SendMouseWheelEvent(\"0\", \"0\", false, game)\r\n                    task.wait(Tapped.Macro.Speed / 100)\r\n                until SpeedGlitch == false\r\n            end\r\n        end\r\n    end\r\nend)\r\n\r\nMouse.KeyDown:Connect(function(Key)\r\n    local Keybind = Tapped['Silent Aim'].Targetting.Keybind:lower()\r\n    if (Key == Keybind) then\r\n        if Tapped['Silent Aim'].Targetting['Keybind Enabled'] then \r\n            if Tapped['Silent Aim'].Enabled == true then \r\n                Tapped['Silent Aim'].Enabled = false\r\n                notify(\"Silent aim disabled.\")\r\n            else\r\n                Tapped['Silent Aim'].Enabled = true\r\n                notify(\"Silent aim enabled.\")\r\n            end\r\n        end\r\n    end\r\nend)\r\n\r\nlocal function GetArgs()\r\n    if game.PlaceId == 2788229376 or game.PlaceId == 4106313503 then\r\n        return \"UpdateMousePos\"\r\n    elseif game.PlaceId == 5602055394 or game.PlaceId == 7951883376 then\r\n        return \"MousePos\"\r\n    elseif game.PlaceId == 10100958808 or game.PlaceId == 12645617354 or game.PlaceId == 14171242539 or game.PlaceId == 14412436145 or game.PlaceId == 14412355918 or game.PlaceId == 14413720089 then\r\n        return \"MOUSE\"\r\n    else\r\n        return \"UpdateMousePos\"\r\n    end\r\nend\r\n\r\n\r\nlocal function GetEvent()\r\n    for _, v in pairs(game.ReplicatedStorage:GetChildren()) do\r\n        if v.Name == \"MainEvent\" or v.Name == \"Bullets\" or v.Name == \".gg/untitledhood\" or v.Name == \"Remote\" or v.Name == \"MAINEVENT\" then\r\n            return v\r\n        end\r\n    end\r\nend\r\n\r\ngame.Players.LocalPlayer.Character.ChildAdded:Connect(LPH_NO_VIRTUALIZE(function(tool)\r\n    if tool:IsA(\"Tool\") then\r\n        tool.Activated:Connect(function()\r\n            if Tapped['Silent Aim'].Enabled then\r\n                if SilentTarget ~= nil then\r\n                    local targetbone\r\n                    if Tapped.Airshot.Enabled then\r\n                        if SilentTarget.Character.Humanoid.Jump == true then\r\n                            targetbone = SilentTarget.Character[Tapped.Airshot.Config.Points.Point]\r\n                        else\r\n                            targetbone = SilentTarget.Character[closestsilentbodypart]\r\n                        end\r\n                    else\r\n                        targetbone = SilentTarget.Character[Tapped['Silent Aim'].Config.Points.Point]\r\n                    end\r\n                    local TargetCF = targetbone.Position\r\n                    if Tapped['Silent Aim'].Config.Points['Nearest Point'] then\r\n                        TargetCF = GetClosestPointOfPart(targetbone)\r\n                    end\r\n                    local Prediction\r\n                    if not Tapped.Resolver.Enabled then \r\n                        Prediction = TargetCF + v3.new(0,Tapped['Silent Aim'].Config.Points['Point Offset'],0) + targetbone.Velocity * Tapped['Silent Aim'].Config.Velocity.Prediction\r\n                    else\r\n                        if Tapped.Resolver.Method == \"MoveDirection\" then \r\n                            Prediction = TargetCF + v3.new(0,Tapped['Silent Aim'].Config.Points['Point Offset'],0) + SilentTarget.Character.Humanoid.MoveDirection * Tapped['Silent Aim'].Config.Velocity.Prediction * 16\r\n                        elseif Tapped.Resolver.Method == \"Delta\"  then\r\n                            Prediction = TargetCF + v3.new(0,Tapped['Silent Aim'].Config.Points['Point Offset'],0) + velocityCalculation(SilentTarget) * Tapped['Silent Aim'].Config.Velocity.Prediction \r\n                        elseif Tapped.Resolver.Method == \"No Prediction\" then\r\n                            Prediction = TargetCF + v3.new(0,Tapped['Silent Aim'].Config.Points['Point Offset'],0)\r\n                        elseif Tapped.Resolver.Method == \"Underground\" then\r\n                            targetbone.Velocity = v3.new(targetbone.Velocity.X, 0, targetbone.Velocity.Z)\r\n                            targetbone.AssemblyLinearVelocity = v3.new(targetbone.Velocity.X, 0, targetbone.Velocity.Z)\r\n                            Prediction = TargetCF + v3.new(0,Tapped['Silent Aim'].Config.Points['Point Offset'],0) + targetbone.Velocity * Tapped['Silent Aim'].Config.Velocity.Prediction\r\n                        end\r\n                    end\r\n                    GetEvent():FireServer(GetArgs(), Prediction)\r\n                end\r\n            end\r\n        end)\r\n    end\r\nend))\r\n    \r\ngame.Players.LocalPlayer.CharacterAdded:Connect(LPH_NO_VIRTUALIZE(function(Character)\r\n    Character.ChildAdded:Connect(function(tool)\r\n        if tool:IsA(\"Tool\") then\r\n            tool.Activated:Connect(function()\r\n                if Tapped['Silent Aim'].Enabled then\r\n                    if SilentTarget ~= nil then\r\n                        local targetbone\r\n                        if Tapped.Airshot.Enabled then\r\n                            if SilentTarget.Character.Humanoid.Jump == true then\r\n                                targetbone = SilentTarget.Character[Tapped.Airshot.Config.Points.Point]\r\n                            else\r\n                                targetbone = SilentTarget.Character[closestsilentbodypart]\r\n                            end\r\n                        else\r\n                            targetbone = SilentTarget.Character[Tapped['Silent Aim'].Config.Points.Point]\r\n                        end\r\n                        local TargetCF = targetbone.Position\r\n                        if Tapped['Silent Aim'].Config.Points['Nearest Point'] then\r\n                            TargetCF = GetClosestPointOfPart(targetbone)\r\n                        end\r\n                        local Prediction\r\n                        if not Tapped.Resolver.Enabled then \r\n                            Prediction = TargetCF + v3.new(0,Tapped['Silent Aim'].Config.Points['Point Offset'],0) + targetbone.Velocity * Tapped['Silent Aim'].Config.Velocity.Prediction\r\n                        else\r\n                            if Tapped.Resolver.Method == \"MoveDirection\" then \r\n                                Prediction = TargetCF + v3.new(0,Tapped['Silent Aim'].Config.Points['Point Offset'],0) + SilentTarget.Character.Humanoid.MoveDirection * Tapped['Silent Aim'].Config.Velocity.Prediction * 16\r\n                            elseif Tapped.Resolver.Method == \"Delta\"  then\r\n                                Prediction = TargetCF + v3.new(0,Tapped['Silent Aim'].Config.Points['Point Offset'],0) + velocityCalculation(SilentTarget) * Tapped['Silent Aim'].Config.Velocity.Prediction \r\n                            elseif Tapped.Resolver.Method == \"No Prediction\" then\r\n                                Prediction = TargetCF + v3.new(0,Tapped['Silent Aim'].Config.Points['Point Offset'],0)\r\n                            elseif Tapped.Resolver.Method == \"Underground\" then\r\n                                targetbone.Velocity = v3.new(targetbone.Velocity.X, 0, targetbone.Velocity.Z)\r\n                                targetbone.AssemblyLinearVelocity = v3.new(targetbone.Velocity.X, 0, targetbone.Velocity.Z)\r\n                                Prediction = TargetCF + v3.new(0,Tapped['Silent Aim'].Config.Points['Point Offset'],0) + targetbone.Velocity * Tapped['Silent Aim'].Config.Velocity.Prediction\r\n                            end\r\n                        end\r\n                        GetEvent():FireServer(GetArgs(), Prediction)\r\n                    end\r\n                end\r\n            end)\r\n        end\r\n    end)\r\nend))\r\n\r\nlocal targeting = false\r\n\r\nMouse.KeyDown:Connect(function(Key)\r\n    local Keybind = Tapped['Cam Lock'].Key:lower()\r\n    if (Key == Keybind) then\r\n        if Tapped['Cam Lock'].Enabled == true then \r\n            if targeting == false then \r\n                GetClosestPlayer2()\r\n                if CamlockTarget ~= nil then \r\n                    targeting = true\r\n                    if Tapped['Cam Lock'].Notify then \r\n                        notify(\"Locked onto: \"..tostring(CamlockTarget))\r\n                    end\r\n                else\r\n                \r\n                    if Tapped['Cam Lock'].Notify then \r\n                        notify(\"aim on someone retard\")\r\n                    end\r\n                end\r\n            else\r\n                targeting = false\r\n                CamlockTarget = nil\r\n                if Tapped['Cam Lock'].Notify then \r\n                    notify(\"ur not legit\")\r\n                end\r\n            end\r\n        end\r\n    end\r\nend)\r\n\r\n\r\ngame:GetService(\"RunService\").RenderStepped:Connect(function()\r\n    if Tapped['Cam Lock'].Flags['Unlock Outside FOV'] and CamlockTarget and CamlockTarget.Character and CamlockTarget.Character:FindFirstChild(closestcamlockpart) then\r\n        if Circle2.Radius \u003C\r\n            (v2.new(\r\n                CurrentCamera:WorldToScreenPoint(CamlockTarget.Character.HumanoidRootPart.Position).X,\r\n                CurrentCamera:WorldToScreenPoint(CamlockTarget.Character.HumanoidRootPart.Position).Y\r\n            ) - v2.new(Mouse.X, Mouse.Y)).Magnitude\r\n         then\r\n            CamlockTarget = nil\r\n            targeting = false\r\n        end\r\n    end\r\n    if Tapped['Cam Lock'].Flags['Unlock On KO'] == true and CamlockTarget ~= nil and CamlockTarget.Character and CamlockTarget.Character:FindFirstChild(closestcamlockpart) then\r\n        if CamlockTarget.Character:FindFirstChild(\"BodyEffects\") then\r\n            local KoCheck \r\n            if CamlockTarget.Character.BodyEffects:FindFirstChild(\"KO\") then \r\n                KoCheck = CamlockTarget.Character.BodyEffects:FindFirstChild(\"KO\").Value\r\n            elseif CamlockTarget.Character.BodyEffects:FindFirstChild(\"K.O\") then\r\n                KoCheck = CamlockTarget.Character.BodyEffects:FindFirstChild(\"K.O\").Value\r\n            end\r\n            \r\n            if KoCheck then\r\n                CamlockTarget = nil   \r\n                targeting = false\r\n                if Tapped['Cam Lock'].Notify then \r\n                    notify(\"Target Knocked, Unlocked.\")\r\n                end\r\n            end\r\n        end\r\n    end\r\n    if Tapped['Cam Lock'].Flags['Unlock Behind Wall'] == true and CamlockTarget ~= nil and CamlockTarget.Character and CamlockTarget.Character:FindFirstChild(closestcamlockpart) then\r\n        if not RayCastCheck(CamlockTarget.Character[closestcamlockpart], CamlockTarget.Character) then \r\n            CamlockTarget = nil   \r\n            targeting = false\r\n            if Tapped['Cam Lock'].Notify then \r\n                notify(\"Target Behind Wall, Unlocked.\")\r\n            end\r\n        end\r\n    end\r\n    if Tapped['Cam Lock'].Enabled and CamlockTarget and CamlockTarget.Character and CamlockTarget.Character:FindFirstChild(Tapped['Cam Lock'].Point) then \r\n        if targeting == true then\r\n            local targetbone\r\n            local shake = v3.new(0,0,0)\r\n            if Tapped.Airshot.Enabled then\r\n                if CamlockTarget.Character.Humanoid.Jump == true then\r\n                    targetbone = CamlockTarget.Character[Tapped.Airshot['Point']]\r\n                else\r\n                    targetbone = CamlockTarget.Character[closestcamlockpart]\r\n                end\r\n            else\r\n                targetbone = CamlockTarget.Character[Tapped['Cam Lock'].Point]\r\n            end\r\n            local TargetCF = targetbone.Position\r\n            if Tapped['Cam Lock']['Nearest Point'] then\r\n                TargetCF = GetClosestPointOfPart(targetbone)\r\n            end\r\n\r\n            if Tapped['Cam Lock'].Shake.Enabled then \r\n                shake = v3.new(\r\n                    math.random(-Tapped['Cam Lock'].Shake.X, Tapped['Cam Lock'].Shake.X),\r\n                    math.random(-Tapped['Cam Lock'].Shake.Y, Tapped['Cam Lock'].Shake.Y),\r\n                    math.random(-Tapped['Cam Lock'].Shake.Z, Tapped['Cam Lock'].Shake.Z)\r\n                ) * 0.1\r\n            end\r\n            local Prediction\r\n            if not Tapped.Resolver.Enabled then \r\n                Prediction = TargetCF + v3.new(0,Tapped['Cam Lock']['Point Offset'],0) + targetbone.Velocity * Tapped['Cam Lock'].Prediction + shake\r\n            else\r\n                if Tapped.Resolver.Method == \"MoveDirection\" then \r\n                    Prediction = TargetCF + v3.new(0,Tapped['Cam Lock']['Point Offset'],0) + CamlockTarget.Character.Humanoid.MoveDirection * Tapped['Cam Lock'].Prediction + shake * 16  \r\n                elseif Tapped.Resolver.Method == \"Delta\"  then\r\n                    Prediction = TargetCF + v3.new(0,Tapped['Cam Lock']['Point Offset'],0) + velocityCalculation(CamlockTarget) * Tapped['Cam Lock'].Prediction + shake \r\n                elseif Tapped.Resolver.Method == \"No Prediction\"  then\r\n                    Prediction = TargetCF + v3.new(0,Tapped['Cam Lock']['Point Offset'],0) + shake \r\n                elseif Tapped.Resolver.Method == \"Underground\"  then\r\n                    targetbone.Velocity = v3.new(targetbone.Velocity.X, 0, targetbone.Velocity.Z)\r\n                    targetbone.AssemblyLinearVelocity = v3.new(targetbone.Velocity.X, 0, targetbone.Velocity.Z)\r\n                    Prediction = TargetCF + v3.new(0,Tapped['Cam Lock']['Point Offset'],0) + targetbone.Velocity * Tapped['Cam Lock'].Prediction + shake\r\n                end\r\n            end\r\n            local Main = CF.new(CurrentCamera.CFrame.p, Prediction)\r\n            if Tapped['Cam Lock'].Smoothness.Enabled then \r\n                CurrentCamera.CFrame = CurrentCamera.CFrame:Lerp(Main, Tapped['Cam Lock'].Smoothness.Value, \"Exponential\", Enum.EasingDirection.InOut)\r\n            else\r\n                CurrentCamera.CFrame = CurrentCamera.CFrame:Lerp(Main, 1, \"Exponential\", Enum.EasingDirection.InOut)\r\n            end\r\n        end\r\n    end\r\nend)\r\n\r\n-- // fps made by dex\r\nif getgenv().Tapped.Fps_Unlocker.Enabled == true then\r\n    setfpscap(getgenv().Tapped.Fps_Unlocker.Cap)\r\nelse\r\n    setfpscap(240)\r\nend\r\n--\r\n\r\n-- // headless\r\n\r\n\r\nif getgenv().Tapped.Options.Headless == true then\r\n    game.Players.LocalPlayer.Character.Head.Transparency = 1\r\n    for i,v in pairs(game.Players.LocalPlayer.Character.Head:GetChildren()) do\r\n         if (v:IsA(\"Decal\")) then\r\n              v.Transparency = 1\r\n         end\r\n    end\r\nend\r\n--\r\n\r\n-- // korblox\r\nif getgenv().Tapped.Options.Korblox == true then\r\n     local ply = game.Players.LocalPlayer\r\n     local chr = ply.Character\r\n     chr.RightLowerLeg.MeshId = \"902942093\"\r\n     chr.RightLowerLeg.Transparency = \"1\"\r\n     chr.RightUpperLeg.MeshId = \"http://www.roblox.com/asset/?id=902942096\"\r\n     chr.RightUpperLeg.TextureID = \"http://roblox.com/asset/?id=902843398\"\r\n     chr.RightFoot.MeshId = \"902942089\"\r\n     chr.RightFoot.Transparency = \"1\"\r\n     game.Players.LocalPlayer.Character.Humanoid.Jump = false\r\n     wait(1)\r\nend"